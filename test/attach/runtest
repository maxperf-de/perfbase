#!/bin/sh

if [ -z "$PB" ] ; then
    PB=../../bin/perfbase
fi
TEST_NAME="attach"
N_TEST=13

export PB_EXPERIMENT=${TEST_NAME}_TEST
unset PB_RUNMODE

if [ "$1" = "-c" ] ; then
    VERIFY=""    
    echo "*** re-creating verification data for '${TEST_NAME}'"
else
    VERIFY="yes"
    echo "*** running $N_TEST tests in '${TEST_NAME}'"
fi
if [ "$1" = "-d" ] ; then
    export PB_RUNMODE="debug"
fi

rm -f *.out *.log

if ! $PB setup -d ${TEST_NAME}_exp.xml >test.log 2>&1; then
    echo "#* ERROR in ${TEST_NAME}: could not setup experiment. See test.log"
    exit 1
fi

#
# store input description and query base names
#
INP_NAME=attach_inp
QRY_NAME=attach_qry

rc=0
t=1

# test 1: should succeed
echo "  test "$t
if ! $PB attach --put --xml=${INP_NAME}_1.xml >>test.log 2>&1 ; then
    echo "#* ERROR in ${TEST_NAME}: could not store valid XML file. See test.log"
    rc=`expr $rc + 1`
fi
t=`expr $t + 1`

# test 2: stores w/o a name are not allowed!
echo "  test "$t
if $PB attach --put --xml=${INP_NAME}_2.xml >>test.log 2>&1; then
    echo "#* ERROR in ${TEST_NAME}: storing XML files w/o name has to fail. See test.log"
    rc=`expr $rc + 1`
fi
t=`expr $t + 1`

# test 3: should succeed
echo "  test "$t
if ! $PB attach --put -n named --xml=${INP_NAME}_2.xml >>test.log 2>&1; then
    echo "#* ERROR in ${TEST_NAME}: could not store valid XML file. See test.log"
    rc=`expr $rc + 1`
fi
t=`expr $t + 1`

# test 4: duplicate stores are not allowed!
echo "  test "$t
if $PB attach --put -n named --xml=${INP_NAME}_2.xml >>test.log 2>&1; then
    echo "#* ERROR in ${TEST_NAME}: storing duplicate XML files has to fail. See test.log"
    rc=`expr $rc + 1`
fi
t=`expr $t + 1`

# test 5: should succeed
echo "  test "$t
if ! $PB attach --put --xml=${INP_NAME}_3.xml >>test.log 2>&1; then
    echo "#* ERROR in ${TEST_NAME}: could not store valid XML file. See test.log"
    rc=`expr $rc + 1`
fi
t=`expr $t + 1`

# test 6: storing invalid XML files has to fail
echo "  test "$t
if $PB attach --put -n invalid -s invalid --xml=invalid.xml >>test.log 2>&1; then
    echo "#* ERROR in ${TEST_NAME}: storing invalid XML files has to fail. See test.log"
    rc=`expr $rc + 1`
fi
t=`expr $t + 1`
# test 7: storing non-XML files has to fail
echo "  test "$t
if $PB attach --put -n binary -s binary --xml=zero.bin >>test.log 2>&1; then
    echo "#* ERROR in ${TEST_NAME}: storing non-XML files has to fail. See test.log"
    rc=`expr $rc + 1`
fi
t=`expr $t + 1`
# test 8: should succeed
echo "  test "$t
if ! $PB attach --put --xml=${QRY_NAME}.xml >>test.log 2>&1; then
    echo "#* ERROR in ${TEST_NAME}: could not store valid XML file. See test.log"
    rc=`expr $rc + 1`
fi
t=`expr $t + 1`

#
# retrieving attachments
#
echo "  test "$t
# test 9: should succeed
if ! $PB attach --get --name=named --xml=test.xml >>test.log 2>&1; then
    echo "#* ERROR in ${TEST_NAME}: retrieving atttachment failed. See test.log"
    rc=`expr $rc + 1`
else
    if ! diff test.xml ${INP_NAME}_2.xml >>test.log 2>&1; then
	echo "#* ERROR in ${TEST_NAME}: invalid content of retrieved atttachment. See test.log"
	rc=`expr $rc + 1`
    else
	rm test.xml
    fi
fi
t=`expr $t + 1`

echo "  test "$t
# should fail
if $PB attach --get --name=notfound --xml=test.xml >>test.log 2>&1; then
    echo "#* ERROR in ${TEST_NAME}: retrieving unknown atttachment should have failed. See test.log"
    rc=`expr $rc + 1`
fi
t=`expr $t + 1`

# 
# import data - should succeed
#
echo "  test "$t
if ! $PB input -n full input/data_1.dat >>test.log 2>&1; then
    echo "#* ERROR in ${TEST_NAME}: could not import input/data_1.dat. See test.log"
    rc=`expr $rc + 1`
fi
t=`expr $t + 1`

echo "  test "$t
if ! $PB input -n named input/data_2.dat -n tabular input/data_3.dat >>test.log 2>&1; then
    echo "#* ERROR in ${TEST_NAME}: could not import input/data_[2|3].dat. See test.log"
    rc=`expr $rc + 1`
fi
t=`expr $t + 1`

#
# perform queries
#
echo "  test "$t
if ! $PB query -e ${TEST_NAME}_TEST -n latency >test_${t}.out 2>&1; then
    echo "#* ERROR in ${TEST_NAME}: could not perform query. See test.log"
    rc=`expr $rc + 1`
else
    if [ -n "$VERIFY" ] ; then
	if ! diff test_${t}.out verify/test_${t}.vfy ; then
	    echo "#* ERROR in ${TEST_NAME}, test $t: query returned wrong data"
	    echo "   (file test_${t}.out vs. verify/test_${t}.vfy)"
	    rc=`expr $rc + 1`
	else
	    rm test_${t}.out
	fi
    else	
	mv test_${t}.out verify/test_${t}.vfy
    fi
fi
t=`expr $t + 1`

# 
# delete experiment
#
if [ PB_RUNMODE != "debug" ] ; then
    sleep 2
    if ! $PB delete -e ${TEST_NAME}_TEST --dontask >>test.log 2>&1; then
        echo "#* ERROR in ${TEST_NAME}: could not delete experiment. See test.log"
        exit 1
    fi
fi

if [ $rc = 0 ] ; then
    rm -f test.log 
fi

echo "*** done with tests in '${TEST_NAME}' ($rc failed)"

exit $rc
