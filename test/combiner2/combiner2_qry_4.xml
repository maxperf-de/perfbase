<?xml version="1.0" standalone="no"?> 
<!DOCTYPE query SYSTEM "../../dtd/pb_query.dtd">

<query id="above_from_sweep">
  <experiment>combiner2_TEST</experiment>
  <description>
    Sweep over a single parameter, get the minimal latency for each variant,
    and calculate the relative difference. The tricky thing here is that we
    apply the operator to input from a combiner, which puts the multiple data 
    streams generated by the sweep parameter into a single object, which then
    can be referenced by another object. Otherwise (without such a combiner), 
    we could not use a sweep, but would have to explicitely filter for the 
    differnt content of a parameter value we want to compare (V_net). This
    would require multiple source, operators etc., leading to a very lengthy
    query.
  </description>

  <parameter id="p.msgsize">
    <value alias="Bytes">S_msg</value>
  </parameter>    

  <parameter id="p.speed" show="filter">
    <value>V_net</value>
    <sweep>
      <filter>
	<equal>100</equal>
      </filter>
      <filter>
	<equal>1000</equal>
      </filter>
    </sweep>
  </parameter>

  <source id="src.latency">
    <result alias="Time">T_pp</result>
    
    <input>p.msgsize</input>

    <input>p.speed</input>
  </source>

  <operator id="op.min" type="min">
    <input>src.latency</input>
  </operator>

  <operator id="op.diff" type="diff" sweep="intercept">
    <input>op.min</input>
  </operator>

  <output>
    <input>op.diff</input>
    <input>op.min</input>
  </output>
  
</query>


